{
    "$schema": "http://json.schemastore.org/template",
    "author": "mytechramblings.com",
    "classifications": [
      "Common",
      "Worker"
    ],
    "name": "NET 5 HostedService Rabbit Consumer",
    "description": "A solution for consuming messages from a RabbitMQ server.",
    "groupIdentity": "Dotnet.RabbitMq.Worker",
    "identity": "Dotnet.RabbitMq.Worker.CSharp",
    "shortName": "mtr-rabbit-worker",
    "defaultName": "RabbitConsumer1",
    "tags": {
      "language": "C#",
      "type": "solution"
    },
    "sourceName": "ApplicationName",
    "preferNameDirectory": true,
    "primaryOutputs": [
        { "path": "ApplicationName.sln" }
    ],
    "sources": [
        {
          "modifiers": [
                {
                    "condition": "(!Docker)",
                    "exclude":
                    [
                        "Dockerfile",
                        ".dockerignore"
                    ]
                },
                {
                    "condition": "(!ReadMe)",
                    "exclude": 
                    [
                        "README.md"
                    ]
                },
                {
                    "condition": "(!Tests)",
                    "exclude": 
                    [
                        "test/ApplicationName.Library.Impl.UnitTest/**/*",
                        "test/ApplicationName.RabbitConsumer.Worker.IntegrationTest/**/*"
                    ]
                },
                {
                    "condition": "(!GitHub)",
                    "exclude": 
                    [
                        ".github/**/*"
                    ]
                },
                {
                    "condition": "(!AzurePipelines)",
                    "exclude": 
                    [
                        "pipelines/**/*"
                    ]
                }
            ]
        }
    ],
    "symbols": {
        "Docker": {
            "type": "parameter",
            "datatype": "bool",
            "description": "Adds an optimised Dockerfile to add the ability build a Docker image.",
            "defaultValue": "true"
        },
        "ReadMe": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "true",
            "description": "Add a README.md markdown file describing the project."
        },
        "Tests": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "true",
            "description": "Adds an integration project and a unit test project."
        },
        "GitHub": {
            "type": "parameter",
            "datatype": "bool",
            "description": "Adds a GitHub action continuous integration pipeline.",
            "defaultValue": "false"
        },
        "AzurePipelines": {
            "type": "parameter",
            "datatype": "bool",
            "description": "Adds an Azure Pipelines YAML.",
            "defaultValue": "true"
        },
        "DeploymentType": {
            "type": "parameter",
            "datatype": "choice",
            "choices": [
              {
                "choice": "DeployAsContainer",
                "description": "The app will be deployed as a container."
              },
              {
                "choice": "DeployAsZip",
                "description": "The app will be deployed as a zip file."
              }
            ],
            "defaultValue": "DeployAsZip",
            "description": "Select how you want to deploy the application."
          },
        "DeployContainer": {
            "type": "computed",
            "value": "(DeploymentType == \"DeployAsContainer\")"
        },
        "DeployZip": {
            "type": "computed",
            "value": "(DeploymentType == \"DeployAsZip\")"
        },
        "QueueName": {
            "type": "parameter",
            "datatype": "string",
            "defaultValue": "Queue1",
            "replaces": "QUEUE-NAME",
            "description": "The name of the RabbitQueue where the consumer is going to be attached."
        },
        "RabbitMqUsername": {
            "type": "parameter",
            "datatype": "string",
            "defaultValue": "demo",
            "replaces": "RABBITMQ-USER",
            "description": "A RabbitMq username used to connect to the cluster."
        },
        "RabbitMqPassword": {
            "type": "parameter",
            "datatype": "string",
            "defaultValue": "1234",
            "replaces": "RABBITMQ-PASSWORD",
            "description": "A RabbitMq password used to connect to the cluster."
        },
        "RabbitMqServer": {
            "type": "parameter",
            "datatype": "string",
            "defaultValue": "127.0.0.1",
            "replaces": "RABBITMQ-SERVER",
            "description": "The RabbitMq server uri."
        },
        "RabbitMqPort": {
            "type": "parameter",
            "datatype": "string",
            "defaultValue": "5672",
            "replaces": "RABBITMQ-PORT",
            "description": "A RabbitMq server port used to connect to the cluster."
        },
        "AcrName": {
            "type": "parameter",
            "datatype": "string",
            "defaultValue": "acrcponsndev",
            "replaces": "ACR-REGISTRY-NAME",
            "description": "An Azure ACR registry name. Only used if deploying with containers."
        },
        "AzureSubscriptionName": {
            "type": "parameter",
            "datatype": "string",
            "defaultValue": "cponsn-dev-subscription",
            "replaces": "AZURE-SUBSCRIPTION-ENDPOINT-NAME",
            "description": "An Azure subscription service endpoint name, only used if deploying with Azure DevOps."
        },
        "AppServiceName": {
            "type": "parameter",
            "datatype": "string",
            "defaultValue": "app-svc-demo-dev",
            "replaces": "APP-SERVICE-NAME",
            "description": "The name of the Azure App Service."
        }
    },
    "SpecialCustomOperations": {
        "**/*.yml": {
            "operations": [
              {
                "type": "conditional",
                "configuration": {
                  "if": [ "#if" ],
                  "else": [ "#else" ],
                  "elseif": [ "#elseif" ],
                  "endif": [ "#endif" ],
                  "actionableIf": [ "##if" ],
                  "actionableElse": [ "##else" ],
                  "actionableElseif": [ "##elseif" ],
                  "actions": [ "uncomment", "reduceComment" ],
                  "trim": "true",
                  "wholeLine": "true",
                  "evaluator": "C++"
                }
              },
              {
                "type": "replacement",
                "configuration": {
                  "original": "#",
                  "replacement": "",
                  "id": "uncomment"
                }
              },
              {
                "type": "replacement",
                "configuration": {
                  "original": "##",
                  "replacement": "#",
                  "id": "reduceComment"
                }
              }
            ]
        }
    }
}

